From matzebraun at berlios.de  Sat Apr  1 00:54:31 2006
From: matzebraun at berlios.de (matzebraun at BerliOS)
Date: Sat, 1 Apr 2006 00:54:31 +0200
Subject: [Flexlay-commit] r629 - trunk/supertux
Message-ID: <200603312254.k2VMsV2n026646@sheep.berlios.de>

Author: matzebraun
Date: 2006-04-01 00:54:19 +0200 (Sat, 01 Apr 2006)
New Revision: 629

Modified:
   trunk/supertux/data.rb
   trunk/supertux/gameobj.rb
Log:
fix for background/gradient split

Modified: trunk/supertux/data.rb
===================================================================
--- trunk/supertux/data.rb	2006-03-15 22:37:18 UTC (rev 628)
+++ trunk/supertux/data.rb	2006-03-31 22:54:19 UTC (rev 629)
@@ -61,6 +61,8 @@
     proc{|data, sexpr| SequenceTrigger.new(data, sexpr)}],
   ["background", "images/engine/editor/background.png", :sprite,
     proc{|data, sexpr| Background.new(data, sexpr)}],
+  ["gradient", "images/engine/editor/gradient.png", :sprite,
+    proc{|data, sexpr| Gradient.new(data, sexpr)}],
   ["particles-snow", "images/engine/editor/snow.png", :sprite,
     proc{|data, sexpr| ParticleSystem.new("snow", sexpr)}],
   ["particles-clouds", "images/engine/editor/clouds.png", :sprite,

Modified: trunk/supertux/gameobj.rb
===================================================================
--- trunk/supertux/gameobj.rb	2006-03-15 22:37:18 UTC (rev 628)
+++ trunk/supertux/gameobj.rb	2006-03-31 22:54:19 UTC (rev 629)
@@ -340,25 +340,19 @@
   end
 end
 
-class Background<GameObj
+class Gradient<GameObj
   def initialize(object, sexpr = [])
     @object = object
-    @image = get_value_from_tree(["image", "_"], sexpr, "")
-    @speed = get_value_from_tree(["speed", "_"], sexpr, 1.0)
     @layer = get_value_from_tree(["layer", "_"], sexpr, -1)
     @color_top = [0, 0, 0]
     @color_bottom = [0, 0, 0]
     @type = "image"
-    if(@image == "" || @type == "gradient")
-      if(get_value_from_tree(["top_color"], sexpr, []) != [])
-        @color_top = parse_color(
-            get_value_from_tree(["top_color"], sexpr, []))
-        @color_bottom = parse_color(
-            get_value_from_tree(["bottom_color"], sexpr, []))
-        @type = "gradient"
-      end
+    if(get_value_from_tree(["top_color"], sexpr, []) != [])
+       @color_top = parse_color(
+           get_value_from_tree(["top_color"], sexpr, []))
+       @color_bottom = parse_color(
+           get_value_from_tree(["bottom_color"], sexpr, []))
     end
-    set_icon()
   end
 
   def parse_color(sexpr = [])
@@ -368,23 +362,10 @@
     return [sexpr[0], sexpr[1], sexpr[2]]
   end
 
-  def set_icon()
-    if(@type == "image")
-      @object.set_sprite(make_sprite($datadir + "images/engine/editor/background.png"))
-    else
-      @object.set_sprite(make_sprite($datadir + "images/engine/editor/gradient.png"))
-    end
-  end
-
   def save(f, obj)
-    f.write("       (background\n")
-    if(@type == "image")
-      f.write("         (image \"%s\")\n" % [@image])
-    else
-      f.write("         (top_color %d %d %d)\n" % @color_top)
-      f.write("         (bottom_color %d %d %d)\n" % @color_bottom)
-    end
-    f.write("         (speed %f)\n" % [@speed])
+    f.write("       (gradient\n")
+    f.write("         (top_color %f %f %f)\n" % [@color_top[0], @color_top[1], @color_top[2]])
+    f.write("         (bottom_color %f %f %f)\n" % [@color_bottom[0], @color_bottom[1], @color_bottom[2]])
     if(@layer != -1)
       f.write("         (layer %d)\n" % [@layer])
     end
@@ -393,9 +374,6 @@
 
   def property_dialog()
     dialog = GenericDialog.new("Background Property Dialog", $gui.get_component())
-    dialog.add_string("Type: ", @type)
-    dialog.add_string("Image: ", @image)
-    dialog.add_float("Speed: ", @speed)
     dialog.add_int("Layer: ", @layer)
     dialog.add_int("Top Red: ", @color_top[0])
     dialog.add_int("Top Green: ", @color_top[1])
@@ -404,10 +382,7 @@
     dialog.add_int("Bottom Green: ", @color_bottom[1])
     dialog.add_int("Bottom Blue: ", @color_bottom[2])
     dialog.set_callback(
-          proc{|type, image, speed, layer, topred, topgreen, topblue, botred, botgreen, botblue|
-            @type = type
-            @image = image
-            @speed = speed
+          proc{|layer, topred, topgreen, topblue, botred, botgreen, botblue|
             @layer = layer
             @color_top[0] = topred
             @color_top[1] = topgreen
@@ -415,11 +390,44 @@
             @color_bottom[0] = botred
             @color_bottom[1] = botgreen
             @color_bottom[2] = botblue
-            set_icon()
             })
   end
 end
 
+class Background<GameObj
+  def initialize(object, sexpr = [])
+    @object = object
+    @image = get_value_from_tree(["image", "_"], sexpr, "")
+    @speed = get_value_from_tree(["speed", "_"], sexpr, 1.0)
+    @layer = get_value_from_tree(["layer", "_"], sexpr, -1)
+    @type = "image"
+  end
+
+  def save(f, obj)
+    f.write("       (background\n")
+    f.write("         (image \"%s\")\n" % [@image])
+    f.write("         (speed %f)\n" % [@speed])
+    if(@layer != -1)
+      f.write("         (layer %d)\n" % [@layer])
+    end
+    f.write("       )\n")
+  end
+
+  def property_dialog()
+    dialog = GenericDialog.new("Background Property Dialog", $gui.get_component())
+    dialog.add_string("Image: ", @image)
+    dialog.add_float("Speed: ", @speed)
+    dialog.add_int("Layer: ", @layer)
+    dialog.set_callback(
+          proc{|type, image, speed, layer|
+            @type = type
+            @image = image
+            @speed = speed
+            @layer = layer
+            })
+  end
+end
+
 class UnimplementedObject<GameObj
   def initialize(sexpr = [])
 	@sexpr = sexpr



