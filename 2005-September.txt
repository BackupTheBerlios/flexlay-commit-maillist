From matzebraun at berlios.de  Wed Sep 14 01:17:41 2005
From: matzebraun at berlios.de (Matthias Braun at BerliOS)
Date: Wed, 14 Sep 2005 01:17:41 +0200
Subject: [Flexlay-commit] r603 - trunk/supertux
Message-ID: <200509132317.j8DNHfJb022564@sheep.berlios.de>

Author: matzebraun
Date: 2005-09-14 01:15:52 +0200 (Wed, 14 Sep 2005)
New Revision: 603

Modified:
   trunk/supertux/WorldMap.rb
   trunk/supertux/WorldMapObject.rb
Log:
fix supertux worldmap support

Modified: trunk/supertux/WorldMap.rb
===================================================================
--- trunk/supertux/WorldMap.rb	2005-08-17 12:04:04 UTC (rev 602)
+++ trunk/supertux/WorldMap.rb	2005-09-13 23:15:52 UTC (rev 603)
@@ -42,13 +42,13 @@
     for i in data
       (name, data) = i[0], i[1..-1]
 
-      if name == "properties"
+      if name == :properties
         @name = get_value_from_tree(["name", "_"], data, "No Name")
         @music = get_value_from_tree(["music", "_"], data, "salcon.ogg")
         @intro_filename = get_value_from_tree(["intro-filename", "_"], data, "")
         @start_pos_x = get_value_from_tree(["start_pos_x", "_"], data, 0)
         @start_pos_y = get_value_from_tree(["start_pos_y", "_"], data, 0)
-      elsif name == "tilemap"
+      elsif name == :tilemap
         @tilemap = TileMap.new()
         @tilemap.parse(data)
       else

Modified: trunk/supertux/WorldMapObject.rb
===================================================================
--- trunk/supertux/WorldMapObject.rb	2005-08-17 12:04:04 UTC (rev 602)
+++ trunk/supertux/WorldMapObject.rb	2005-09-13 23:15:52 UTC (rev 603)
@@ -36,7 +36,7 @@
     writer.write_int("x", pos.x / 32)
     writer.write_int("y", pos.y / 32)
     writer.write_string("name", @name)
-    writer.end_list("level")
+    writer.end_list("spawnpoint")
   end
 
   def property_dialog()
@@ -186,9 +186,9 @@
 end
 
 $worldmap_objects = [
-  ["level", "images/worldmap/common/leveldot_green.png", WorldmapLevel],
-  ["special-tile", "images/worldmap/common/teleporterdot.png", SpecialTile],
-  ["spawnpoint", "images/worldmap/common/tux.png", WMSpawnPoint],
+  [:level, "images/worldmap/common/leveldot_green.png", WorldmapLevel],
+  [:"special-tile", "images/worldmap/common/teleporterdot.png", SpecialTile],
+  [:spawnpoint, "images/worldmap/common/tux.png", WMSpawnPoint],
 ]
 
 def create_worldmapobject_at_pos(objmap, name, pos)



From matzebraun at berlios.de  Wed Sep 14 01:29:24 2005
From: matzebraun at berlios.de (Matthias Braun at BerliOS)
Date: Wed, 14 Sep 2005 01:29:24 +0200
Subject: [Flexlay-commit] r604 - trunk/ruby
Message-ID: <200509132329.j8DNTOB0028356@sheep.berlios.de>

Author: matzebraun
Date: 2005-09-14 01:28:35 +0200 (Wed, 14 Sep 2005)
New Revision: 604

Modified:
   trunk/ruby/sexpr.rb
Log:
fixed parsing of translatable strings

Modified: trunk/ruby/sexpr.rb
===================================================================
--- trunk/ruby/sexpr.rb	2005-09-13 23:15:52 UTC (rev 603)
+++ trunk/ruby/sexpr.rb	2005-09-13 23:28:35 UTC (rev 604)
@@ -45,7 +45,7 @@
       return tree
     elsif spec == ['_']
 	  # is it a translatable string?
-	  if(tree[0].instance_of?(Array) and tree[0][0] == "_")
+	  if(tree[0].instance_of?(Array) and tree[0][0] == :"_")
 		return tree[0][1]
 	  else
         return tree[0]



From matzebraun at berlios.de  Sat Sep 17 12:32:53 2005
From: matzebraun at berlios.de (Matthias Braun at BerliOS)
Date: Sat, 17 Sep 2005 12:32:53 +0200
Subject: [Flexlay-commit] r605 - trunk/supertux
Message-ID: <200509171032.j8HAWr9v030245@sheep.berlios.de>

Author: matzebraun
Date: 2005-09-17 12:32:39 +0200 (Sat, 17 Sep 2005)
New Revision: 605

Modified:
   trunk/supertux/WorldMap.rb
   trunk/supertux/level.rb
   trunk/supertux/sector.rb
Log:
fix for sexp/lisp changes

Modified: trunk/supertux/WorldMap.rb
===================================================================
--- trunk/supertux/WorldMap.rb	2005-09-13 23:28:35 UTC (rev 604)
+++ trunk/supertux/WorldMap.rb	2005-09-17 10:32:39 UTC (rev 605)
@@ -44,6 +44,7 @@
 
       if name == :properties
         @name = get_value_from_tree(["name", "_"], data, "No Name")
+        print "Name:" + @name.to_s
         @music = get_value_from_tree(["music", "_"], data, "salcon.ogg")
         @intro_filename = get_value_from_tree(["intro-filename", "_"], data, "")
         @start_pos_x = get_value_from_tree(["start_pos_x", "_"], data, 0)

Modified: trunk/supertux/level.rb
===================================================================
--- trunk/supertux/level.rb	2005-09-13 23:28:35 UTC (rev 604)
+++ trunk/supertux/level.rb	2005-09-17 10:32:39 UTC (rev 605)
@@ -53,7 +53,7 @@
     
     @current_sector = nil
     @sectors = []
-    for sec in sexpr_filter("sector", data)
+    for sec in sexpr_filter(:sector, data)
       sector = Sector.new(self)
       sector.load_v2(sec)
       @sectors.push(sector)

Modified: trunk/supertux/sector.rb
===================================================================
--- trunk/supertux/sector.rb	2005-09-13 23:28:35 UTC (rev 604)
+++ trunk/supertux/sector.rb	2005-09-17 10:32:39 UTC (rev 605)
@@ -86,11 +86,11 @@
     for i in get_value_from_tree(["objects"], data, [])
       (name, odata) = i[0], i[1..-1]
       # fix some old object names
-      if(name == "money")
-        name = "jumpy"
+      if(name == :money)
+        name = :jumpy
       end
-      if(name == "laptop")
-        name = "mriceblock"
+      if(name == :laptop)
+        name = :mriceblock
       end
       create_gameobject_from_data(@objects, name, odata)
     end
@@ -159,14 +159,14 @@
 
     for i in data
       (name,data) = i[0], i[1..-1]
-      if name == "name"
+      if name == :name
         @name = data[0]
-      elsif name == "gravity"
+      elsif name == :gravity
         @gravity = data[0]
-	  elsif name == "music"
-		@music = data[0]
-      elsif name == "tilemap"
-		layer   = get_value_from_tree(["layer", "_"], data, "interactive")
+      elsif name == :music
+	@music = data[0]
+      elsif name == :tilemap
+	layer   = get_value_from_tree(["layer", "_"], data, "interactive")
         width   = get_value_from_tree(["width", "_"],  data, 20)
         height  = get_value_from_tree(["height", "_"], data, 15)
         solid   = get_value_from_tree(["solid", "_"],  data, false)
@@ -181,24 +181,23 @@
         elsif layer == "background"
           @background = tilemap
         elsif layer == "foreground"
-		  @foreground = tilemap
+	  @foreground = tilemap
         else
           print "Flexlay doesn't handle tilemap layer '", layer, "'.\n"
         end
-	  elsif name == "camera"
-		@cameramode = "normal"
-		# TODO...
+      elsif name == :camera
+	@cameramode = "normal"
+	# TODO...
       else
-        puts "Creating #{name}..."
-		create_gameobject_from_data(@objects, name, data)
+	create_gameobject_from_data(@objects, name, data)
       end
     end
     
     print "Tileset: ", $tileset, " ", width, " ", height, "\n"
 
-	if(@interactive == nil || @width == 0 || @height == 0)
-	  throw "No interactive tilemap in sector '", @name , "'.\n"
-	end
+    if(@interactive == nil || @width == 0 || @height == 0)
+      throw "No interactive tilemap in sector '", @name , "'.\n"
+    end
 
     if (@background == nil)
       @background = TilemapLayer.new($tileset, @width, @height)



From grumbel at berlios.de  Mon Sep 19 19:36:48 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 19 Sep 2005 19:36:48 +0200
Subject: [Flexlay-commit] r606 - in trunk: ruby windstille
Message-ID: <200509191736.j8JHamck011941@sheep.berlios.de>

Author: grumbel
Date: 2005-09-19 19:36:38 +0200 (Mon, 19 Sep 2005)
New Revision: 606

Added:
   trunk/ruby/sexpr_config_file.rb
Modified:
   trunk/ruby/flexlay.rb
   trunk/windstille/gameobjects.rb
   trunk/windstille/gui.rb
   trunk/windstille/gui_specs.rb
   trunk/windstille/sector.rb
   trunk/windstille/windstille.rb
Log:
- added class for config file parsing and stair support

Modified: trunk/ruby/flexlay.rb
===================================================================
--- trunk/ruby/flexlay.rb	2005-09-17 10:32:39 UTC (rev 605)
+++ trunk/ruby/flexlay.rb	2005-09-19 17:36:38 UTC (rev 606)
@@ -1,5 +1,3 @@
-puts "This line must only apear once!"
-
 class TilemapLayer
   alias orig_get_metadata get_metadata
   alias orig_set_metadata set_metadata

Added: trunk/ruby/sexpr_config_file.rb
===================================================================
--- trunk/ruby/sexpr_config_file.rb	2005-09-17 10:32:39 UTC (rev 605)
+++ trunk/ruby/sexpr_config_file.rb	2005-09-19 17:36:38 UTC (rev 606)
@@ -0,0 +1,128 @@
+##  $Id$
+## 
+##  Flexlay - A Generic 2D Game Editor
+##  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
+##
+##  This program is free software; you can redistribute it and/or
+##  modify it under the terms of the GNU General Public License
+##  as published by the Free Software Foundation; either version 2
+##  of the License, or (at your option) any later version.
+##
+##  This program is distributed in the hope that it will be useful,
+##  but WITHOUT ANY WARRANTY; without even the implied warranty of
+##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+##  GNU General Public License for more details.
+## 
+##  You should have received a copy of the GNU General Public License
+##  along with this program; if not, write to the Free Software
+##  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+
+require "sexpr.rb"
+
+# Options is a class to manage configuration options and save/load of
+# them
+class SExprConfigFile
+  # The name is used to derive the location of the config file in the
+  # file system, name must not contain / or \
+  def initialize(name, &block)
+    @name    = name
+    @defaults = {}
+    @options = {}
+
+    home = ENV['HOME']
+    if home then
+      dir = home + "/.#{name}"
+      if not (File.exists?(dir) and File.directory?(dir)) then
+        Dir::mkdir(dir)
+      end
+      @filename = home + "/.#{@name}/config.scm"
+    else
+      # assuming windows
+      @filename = "#{name}-config.scm"
+    end
+    
+    if block then
+      instance_eval(&block);
+      read()
+    end
+  end
+
+  # Register default values
+  def register(name, value)
+    @defaults[name] = value
+  end
+
+  def get(name)
+    if @options.has_key?(name) then
+      return @options[name]
+    elsif @defaults.has_key?(name) then
+      return @defaults[name]
+    else
+      raise "Error: Options:get: don't have a #{name} option"
+    end
+  end
+
+  def set(name, value)
+    if @options.has_key?(name) then
+      return @options[name]
+    else
+      raise "Error: Options:set: don't have a #{name} option"
+    end
+  end
+
+  def read()
+    sexpr = SExpression.new_from_file(@filename)
+    sexpr = sexpr.cdr()
+    sexpr.each_pair() {|key, value|
+      if @defaults.has_key?(key.to_s) then
+        if @defaults[key.to_s].is_a?(Array) then
+          @options[key.to_s] = value.value()
+        else
+          @options[key.to_s] = value.value()[0]
+        end
+      else
+        puts "Warning: Ignoring unknown config key: #{key}"
+      end
+    }
+  end
+
+  def value2sexpr(value)
+    if value.is_a?(Fixnum) or value.is_a?(Float) then
+      return value.to_s
+    elsif value.is_a?(String)
+      return value.inspect
+    elsif value.is_a?(TrueClass) or value.is_a?(FalseClass)
+      if value then 
+        return "#t"
+      else
+        return "#f"
+      end
+    elsif value.is_a?(Array)
+      str = ""
+      value.each() {|v| 
+        str += val2sexpr(v)
+        str += " "
+      }
+      return str
+    else
+      raise "Error: Unknown option type: #{value.class}"
+    end
+  end
+
+  def write()
+    # FIXME: Move this over to a SExpression writer
+    f = File.new(@filename, "w")
+    f.puts("(#{@name}-config")
+    @defaults.each_pair {|key, value|
+      if @options.has_key?(key) then
+        f.puts("    (%-20s %s)" % [key, value2sexpr(@options[key])])
+      else
+        f.puts(";;  (%-20s %s)" % [key, value2sexpr(value)])
+      end
+    }
+    f.puts(")\n\n;; EOF ;;")
+    f.close()
+  end
+end
+
+# EOF #

Modified: trunk/windstille/gameobjects.rb
===================================================================
--- trunk/windstille/gameobjects.rb	2005-09-17 10:32:39 UTC (rev 605)
+++ trunk/windstille/gameobjects.rb	2005-09-19 17:36:38 UTC (rev 606)
@@ -34,7 +34,13 @@
   end
 
   def save(f)
-    write_sexpr(f, [@name, *@sexpr])
+    f.write("    (#{@name}\n")
+    @sexpr.each{|i|
+      f.write("      ")
+      write_sexpr(f, i)
+      f.write("\n")
+    }
+    f.write("    )")
     f.puts
   end
 end

Modified: trunk/windstille/gui.rb
===================================================================
--- trunk/windstille/gui.rb	2005-09-17 10:32:39 UTC (rev 605)
+++ trunk/windstille/gui.rb	2005-09-19 17:36:38 UTC (rev 606)
@@ -103,6 +103,7 @@
   end
 
   def on_map_change()
+    puts "Mapchange" 
     if (@workspace.get_map().undo_stack_size() > 0)
       @button_panel.items["undo"].enable()
     else
@@ -131,6 +132,13 @@
       @button_panel.items["interactive"].set_up();
     end
 
+    if layer == :interactivebackground then
+      @button_panel.items["interactivebackground"].set_down();
+      TilemapLayer.set_current(@workspace.get_map().get_metadata().interactivebackground)
+    else
+      @button_panel.items["interactivebackground"].set_up();
+    end
+
     if layer == :foreground then
       @button_panel.items["foreground"].set_down();
       TilemapLayer.set_current(@workspace.get_map().get_metadata().foreground)

Modified: trunk/windstille/gui_specs.rb
===================================================================
--- trunk/windstille/gui_specs.rb	2005-09-17 10:32:39 UTC (rev 605)
+++ trunk/windstille/gui_specs.rb	2005-09-19 17:36:38 UTC (rev 606)
@@ -59,6 +59,7 @@
   [:seperator],
   [:icon,       "background",  "../data/images/icons24/background.png",    proc{ $gui.show_layer(:background) }],
   [:icon,       "interactive", "../data/images/icons24/interactive.png",   proc{ $gui.show_layer(:interactive) }],
+  [:icon,       "interactivebackground", "../data/images/icons24/interactive.png",   proc{ $gui.show_layer(:interactivebackground) }],
   [:icon,       "foreground",  "../data/images/icons24/foreground.png",    proc{ $gui.show_layer(:foreground) }],
   [:icon,       "properties",  "../data/images/icons24/stock_properties.png", proc{ $gui.layer_properties() }],
   [:icon,       "viewprops",   "../data/images/icons24/eye.png",           proc{ $gui.layer_menu.run() }],
@@ -83,8 +84,8 @@
   ["1",  proc{ |x, y| $gui.show_layer(:background)}],
 ]
 
-$guilayout_spec = [
-  :vbox, 
+$guilayout_spec = \
+[:vbox, 
   [:homogenus, false],
   [:components,
     

Modified: trunk/windstille/sector.rb
===================================================================
--- trunk/windstille/sector.rb	2005-09-17 10:32:39 UTC (rev 605)
+++ trunk/windstille/sector.rb	2005-09-19 17:36:38 UTC (rev 606)
@@ -31,7 +31,7 @@
 class Sector
   ## Sector Properties
   attr_reader :layers, :editormap
-  attr_reader :background, :interactive, :foreground, :objects
+  attr_reader :background, :interactive, :interactivebackground,:foreground, :objects
 
   attr_accessor :name
 
@@ -49,14 +49,17 @@
     
     @background  = TilemapLayer.new($tileset, width, height)
     @interactive = TilemapLayer.new($tileset, width, height)
+    @interactivebackground = TilemapLayer.new($tileset, width, height)
     @foreground  = TilemapLayer.new($tileset, width, height)
     
     @background.set_metadata(TilemapMetadata.new(:name =>  'background'))
     @foreground.set_metadata(TilemapMetadata.new(:name =>  'foreground'))
     @interactive.set_metadata(TilemapMetadata.new(:name => 'interactive'))
+    @interactive.set_metadata(TilemapMetadata.new(:name => 'interactivebackground'))
 
     @layers = []
     @layers += [@background]
+    @layers += [@interactivebackground]
     @layers += [@interactive]
     @layers += [@foreground]
     @layers += [@objects = ObjectLayer.new()]
@@ -108,6 +111,8 @@
           @background = tilemap
         when "interactive"
           @interactive = tilemap
+        when "interactivebackground"
+          @interactivebackground = tilemap
         when "background"
           @background = tilemap
         else
@@ -124,7 +129,7 @@
       end
     }
     
-    @layers += [@background, @interactive, @foreground, @objects]
+    @layers += [@background, @interactivebackground, @interactive, @foreground, @objects]
 
     @editormap = EditorMap.new()
     @layers.each {|layer| 
@@ -147,8 +152,11 @@
 
     TilemapLayer.set_current(@layers[@current_layer])
     ObjectLayer.set_current(@objects)
-
-    connect(@editormap.sig_change(), proc{$gui.on_map_change()})
+    
+    connect(@editormap.sig_change(), proc{
+              puts "blabl"
+              $gui.on_map_change()
+            })
   end
 
   def save(filename)
@@ -168,8 +176,8 @@
       if tilemap then
         width  = tilemap.get_width()
         height = tilemap.get_height()
-        f.write("  (tilemap (name \"%s\") (width %d) (height %d) (z-pos 0)\n" % \
-                [name, width, height]) # FIXME: add escaping to strings
+        f.write("  (tilemap (name \"%s\") (width %d) (height %d) (z-pos %d)\n" % \
+                [name, width, height, tilemap.get_metadata().z_pos]) # FIXME: add escaping to strings
         f.write("    (data")
         tilemap.get_data().each_with_index {|item, i|
           if (i % width == 0) then
@@ -182,6 +190,7 @@
     }
 
     save_tilemap.call("background",  @background)
+    save_tilemap.call("interactivebackground", @interactivebackground)
     save_tilemap.call("interactive", @interactive)
     save_tilemap.call("foreground",  @foreground)
 

Modified: trunk/windstille/windstille.rb
===================================================================
--- trunk/windstille/windstille.rb	2005-09-17 10:32:39 UTC (rev 605)
+++ trunk/windstille/windstille.rb	2005-09-19 17:36:38 UTC (rev 606)
@@ -23,12 +23,6 @@
 $datadir = "/home/ingo/projects/windstille/trunk/data/"
 
 ## First we try to read a config file to set some variables
-$config_file = File.expand_path("~/.flexlay/windstille.rb")
-
-if File.exist?($config_file) then
-  require $config_file
-end
-
 ## Load Flexlay library
 require "flexlay_wrap"
 include Flexlay_wrap
@@ -37,13 +31,22 @@
 
 require "controller.rb"
 require "sexpr.rb"
+require "sexpr_config_file.rb"
 require "gui.rb"
 require "sector.rb"
 require "tileset.rb"
 
-$screen_width  = 640
-$screen_height = 480
 
+$config = SExprConfigFile.new("windstille-editor") {
+  register("screen-width",  800)
+  register("screen-height", 600)
+  register("fullscreen",    false)
+  register("recent-files",  [])
+}
+
+$screen_width  = $config.get("screen-width")
+$screen_height = $config.get("screen-height")
+
 ## Init Flexlay itself
 $flexlay = Flexlay.new()
 $flexlay.init($screen_width, $screen_height, false, true)
@@ -67,6 +70,8 @@
 
 $gui.run()
 
+$config.write()
+
 # $flexlay.deinit()
 
 # EOF #



From grumbel at berlios.de  Mon Sep 19 19:59:14 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 19 Sep 2005 19:59:14 +0200
Subject: [Flexlay-commit] r607 - trunk/windstille
Message-ID: <200509191759.j8JHxEfn002052@sheep.berlios.de>

Author: grumbel
Date: 2005-09-19 19:59:10 +0200 (Mon, 19 Sep 2005)
New Revision: 607

Modified:
   trunk/windstille/gui.rb
   trunk/windstille/windstille.rb
Log:
- added gui to set datadir

Modified: trunk/windstille/gui.rb
===================================================================
--- trunk/windstille/gui.rb	2005-09-19 17:36:38 UTC (rev 606)
+++ trunk/windstille/gui.rb	2005-09-19 17:59:10 UTC (rev 607)
@@ -35,7 +35,7 @@
   end
 
   def initialize()
-    @gui = GUIManager.new()
+    @gui = $gui_manager
 
     components = LayoutComponent.create_from_sexpr(CL_Rect.new(0,0, $screen_width, $screen_height),
                                                    SExpression.new($guilayout_spec),

Modified: trunk/windstille/windstille.rb
===================================================================
--- trunk/windstille/windstille.rb	2005-09-19 17:36:38 UTC (rev 606)
+++ trunk/windstille/windstille.rb	2005-09-19 17:59:10 UTC (rev 607)
@@ -20,8 +20,6 @@
 ## A basic tile editor that should act as example for other games, use
 ## it to fork your own code.
 
-$datadir = "/home/ingo/projects/windstille/trunk/data/"
-
 ## First we try to read a config file to set some variables
 ## Load Flexlay library
 require "flexlay_wrap"
@@ -38,21 +36,36 @@
 
 
 $config = SExprConfigFile.new("windstille-editor") {
+  register("datadir",       nil)
   register("screen-width",  800)
   register("screen-height", 600)
   register("fullscreen",    false)
   register("recent-files",  [])
 }
 
+$datadir = $config.get("datadir")
+
 $screen_width  = $config.get("screen-width")
 $screen_height = $config.get("screen-height")
 
 ## Init Flexlay itself
 $flexlay = Flexlay.new()
 $flexlay.init($screen_width, $screen_height, false, true)
+$gui_manager = GUIManager.new()
 
+if $datadir == nil or not File.exist?($datadir) then
+  dialog = GenericDialog.new("Windstille Data Directory", $gui_manager.get_component())
+  dialog.add_label("You need to specify the datadir of Windstille is located")
+  dialog.add_string("Datadir:", $datadir || "")
+  
+  dialog.set_block { |datadir|
+    $datadir = datadir 
+    $gui_manager.quit()
+  }
+  $gui_manager.run()
+end
+
 ## Initialize Tools
-
 $controller = Controller.new()
 
 $resources = CL_ResourceManager.new("../data/flexlay.xml")
@@ -70,6 +83,7 @@
 
 $gui.run()
 
+$config.set("datadir", $datadir)
 $config.write()
 
 # $flexlay.deinit()



From grumbel at berlios.de  Mon Sep 19 21:10:49 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Mon, 19 Sep 2005 21:10:49 +0200
Subject: [Flexlay-commit] r608 - in trunk: ruby windstille
Message-ID: <200509191910.j8JJAn23007080@sheep.berlios.de>

Author: grumbel
Date: 2005-09-19 21:10:48 +0200 (Mon, 19 Sep 2005)
New Revision: 608

Modified:
   trunk/ruby/sexpr_config_file.rb
   trunk/windstille/gui.rb
   trunk/windstille/windstille.rb
Log:
- changed datadir handling a bit and fixed some bugs

Modified: trunk/ruby/sexpr_config_file.rb
===================================================================
--- trunk/ruby/sexpr_config_file.rb	2005-09-19 17:59:10 UTC (rev 607)
+++ trunk/ruby/sexpr_config_file.rb	2005-09-19 19:10:48 UTC (rev 608)
@@ -63,8 +63,8 @@
   end
 
   def set(name, value)
-    if @options.has_key?(name) then
-      return @options[name]
+    if @defaults.has_key?(name) then
+      @options[name] = value
     else
       raise "Error: Options:set: don't have a #{name} option"
     end
@@ -114,7 +114,7 @@
     f = File.new(@filename, "w")
     f.puts("(#{@name}-config")
     @defaults.each_pair {|key, value|
-      if @options.has_key?(key) then
+      if @options.has_key?(key) and @options[key] != nil then
         f.puts("    (%-20s %s)" % [key, value2sexpr(@options[key])])
       else
         f.puts(";;  (%-20s %s)" % [key, value2sexpr(value)])

Modified: trunk/windstille/gui.rb
===================================================================
--- trunk/windstille/gui.rb	2005-09-19 17:59:10 UTC (rev 607)
+++ trunk/windstille/gui.rb	2005-09-19 19:10:48 UTC (rev 608)
@@ -35,21 +35,23 @@
   end
 
   def initialize()
-    @gui = $gui_manager
-
-    components = LayoutComponent.create_from_sexpr(CL_Rect.new(0,0, $screen_width, $screen_height),
-                                                   SExpression.new($guilayout_spec),
+    @gui = GUIManager.new()
+    
+    @components = LayoutComponent.create_from_sexpr(CL_Rect.new(0,0, $screen_width, $screen_height),
+                                                    SExpression.new($guilayout_spec),
                                                    @gui.get_component())
     
     connect_v2_graceful($flexlay.sig_resize(), proc{|w, h|
-                          components.set_size(w, h)
+                          @components.set_size(w, h)
                         })
+  end
 
-    @editor_map = components.get('editormap').component
+  def post_initalize()
+    @editor_map = @components.get('editormap').component
     @workspace  = Workspace.new()
     @editor_map.set_workspace(@workspace)
 
-    @button_panel = components.get('buttonpanel').component
+    @button_panel = @components.get('buttonpanel').component
 
     @button_panel.items["undo"].disable()
     @button_panel.items["redo"].disable()
@@ -60,7 +62,7 @@
     @layer_menu.add_item("Show only current", proc{ show_only_current() })
     
     @toolbar = ButtonPanel.new_from_spec(0, 23+33, 33, 32*4+2, false, $toolbar_spec, @gui.get_component)
-    @menu    = components.get('menubar').component
+    @menu    = @components.get('menubar').component
 
     # FIXME: Having position in the Menus here is EXTREMLY ugly
     @tilegroup_menu = Menu.new(CL_Point.new(35*15+2, 54), @gui.get_component())
@@ -69,14 +71,14 @@
       @tilegroup_menu.add_item(tilegroup.name, proc{@tileselector.set_tiles(tilegroup.tiles)})
     }
 
-    @tileselector = components.get('tileselector').component
+    @tileselector = @components.get('tileselector').component
     @tileselector.set_tileset($tileset)
     @tileselector.set_scale(0.75)
     @tileselector.set_tiles($tileset.tilegroups[0].tiles)
     # @tileselector.set_tiles($tileset.get_tiles())
     @tileselector.show(true)
     
-    @objectselector = components.get('objectselector').component
+    @objectselector = @components.get('objectselector').component
     @objectselector.show(false)
 
     connect_v2_ObjectBrush_Point(@objectselector.sig_drop(), proc{|brush, pos| on_object_drop(brush, pos) })
@@ -195,8 +197,8 @@
   def new_level()
     level = @workspace.get_map().get_metadata()
     dialog = GenericDialog.new("Create New Sector", @gui.get_component())
-    dialog.add_int("Width: ", level.width)
-    dialog.add_int("Height: ", level.height)
+    dialog.add_int("Width: ",  60)
+    dialog.add_int("Height: ", 40)
     dialog.add_int("X: ", 0)
     dialog.add_int("Y: ", 0)
     dialog.set_callback(proc{|w, h, x, y| 

Modified: trunk/windstille/windstille.rb
===================================================================
--- trunk/windstille/windstille.rb	2005-09-19 17:59:10 UTC (rev 607)
+++ trunk/windstille/windstille.rb	2005-09-19 19:10:48 UTC (rev 608)
@@ -51,36 +51,38 @@
 ## Init Flexlay itself
 $flexlay = Flexlay.new()
 $flexlay.init($screen_width, $screen_height, false, true)
-$gui_manager = GUIManager.new()
 
+$gui = GUI.new()
+
+## Initialize Tools and stuff
+def init()
+  $controller = Controller.new()
+  
+  $tileset = Tileset.new(32)
+  $tileset.load($datadir + "tiles.scm")
+  
+  $gui.post_initalize()
+
+  $startlevel = Sector.new(100, 30)
+  $startlevel.activate($workspace)
+
+  $gui.workspace.set_tool($controller.tilemap_paint_tool.to_tool());
+end
+
 if $datadir == nil or not File.exist?($datadir) then
-  dialog = GenericDialog.new("Windstille Data Directory", $gui_manager.get_component())
+  dialog = GenericDialog.new("Windstille Data Directory", $gui.gui.get_component())
   dialog.add_label("You need to specify the datadir of Windstille is located")
   dialog.add_string("Datadir:", $datadir || "")
   
   dialog.set_block { |datadir|
     $datadir = datadir 
-    $gui_manager.quit()
+    # datadir is ready, so startup
+    init()
   }
-  $gui_manager.run()
+else
+  # datadir is ready, so startup
+  init()
 end
-
-## Initialize Tools
-$controller = Controller.new()
-
-$resources = CL_ResourceManager.new("../data/flexlay.xml")
-
-$tileset = Tileset.new(32)
-$tileset.load($datadir + "tiles.scm")
-
-## Create some basic GUI
-$gui = GUI.new()
-
-$gui.workspace.set_tool($controller.tilemap_paint_tool.to_tool());
-
-$startlevel = Sector.new(100, 30)
-$startlevel.activate($workspace)
-
 $gui.run()
 
 $config.set("datadir", $datadir)



From grumbel at berlios.de  Tue Sep 20 00:26:17 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 20 Sep 2005 00:26:17 +0200
Subject: [Flexlay-commit] r609 - trunk/ruby
Message-ID: <200509192226.j8JMQHZ0025078@sheep.berlios.de>

Author: grumbel
Date: 2005-09-20 00:26:15 +0200 (Tue, 20 Sep 2005)
New Revision: 609

Added:
   trunk/ruby/command_line.rb
Log:
- incomplete command line parser

Added: trunk/ruby/command_line.rb
===================================================================
--- trunk/ruby/command_line.rb	2005-09-19 19:10:48 UTC (rev 608)
+++ trunk/ruby/command_line.rb	2005-09-19 22:26:15 UTC (rev 609)
@@ -0,0 +1,116 @@
+##  $Id$
+## 
+##  Flexlay - A Generic 2D Game Editor
+##  Copyright (C) 2002 Ingo Ruhnke <grumbel at gmx.de>
+##
+##  This program is free software; you can redistribute it and/or
+##  modify it under the terms of the GNU General Public License
+##  as published by the Free Software Foundation; either version 2
+##  of the License, or (at your option) any later version.
+##
+##  This program is distributed in the hope that it will be useful,
+##  but WITHOUT ANY WARRANTY; without even the implied warranty of
+##  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+##  GNU General Public License for more details.
+## 
+##  You should have received a copy of the GNU General Public License
+##  along with this program; if not, write to the Free Software
+##  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
+
+# A parser for command line arguments
+class CommandLineOption
+  attr_reader :short, :long, :description
+
+  def initialize(short, long, description)
+    @short = short
+    @long  = long
+    @description = description
+  end
+end
+
+class CommandLine
+  def initialize(&block)
+    @options = []
+    @name    = nil
+    @usage   = nil
+    @help    = []
+    @description = nil
+
+    if block then
+      instance_eval(&block);
+    end
+  end
+
+  def name(name)
+    @name = name
+  end
+
+  def usage(usage)
+    @usage = usage
+  end
+
+  def description(description)
+    @description = description
+  end
+
+  def group(group)
+    @help.push("\n" + group + ":")
+  end
+
+  def text(text)
+    @help.push(text)
+  end
+
+  def option(short, long, argument, description)
+    cmd = CommandLineOption.new(short, long, description)
+    @options.push(cmd)
+    @help.push(cmd)
+  end
+
+  def parse(args)
+    args = args.clone()
+    print_help()
+
+    yield()
+  end
+
+  def print_help()
+    puts(@name) if @name
+    puts("Usage: " + @usage) if @usage
+    puts("")
+    puts(@description) if @description
+
+    @help.each() { |item|
+      if item.is_a?(String)
+        puts(item)
+      elsif item.is_a?(CommandLineOption)
+        puts("   -#{item.short}, --#{item.long}   #{item.description}")
+      end
+    }
+  end
+end
+
+cmd = CommandLine.new() {
+  name("Windstille Editor V0.1")
+  usage("windstille-editor [OPTION]... [FILE]...")
+  description("Editor for editing Windstille map files.")
+  
+  group("Display")
+  option("f", "fullscreen", nil,            "Launch in fullscreen mode")
+  option("g", "geometry",   "WIDTHxHEIGHT", "Launch in the given resolution")
+
+  text("If you have throuble launching, try to cleanup ~/.windstille-editor/config.scm or contact grumbel at gmx.de")
+}
+
+cmd.parse(ARGV) { |option, argument|
+  case option
+  when "f"
+    
+  when "g"
+    
+  when :rest
+    
+  end
+}
+
+# EOF #



From grumbel at berlios.de  Tue Sep 20 11:01:58 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 20 Sep 2005 11:01:58 +0200
Subject: [Flexlay-commit] r610 - trunk/ruby
Message-ID: <200509200901.j8K91w7b028554@sheep.berlios.de>

Author: grumbel
Date: 2005-09-20 11:01:54 +0200 (Tue, 20 Sep 2005)
New Revision: 610

Modified:
   trunk/ruby/command_line.rb
Log:
- command line parsing now basically working

Modified: trunk/ruby/command_line.rb
===================================================================
--- trunk/ruby/command_line.rb	2005-09-19 22:26:15 UTC (rev 609)
+++ trunk/ruby/command_line.rb	2005-09-20 09:01:54 UTC (rev 610)
@@ -19,15 +19,19 @@
 
 # A parser for command line arguments
 class CommandLineOption
-  attr_reader :short, :long, :description
+  attr_reader :short, :long, :argument, :description
 
-  def initialize(short, long, description)
+  def initialize(short, long, argument, description)
     @short = short
     @long  = long
+    @argument = argument
     @description = description
   end
 end
 
+class CommandLineException < RuntimeError
+end
+
 class CommandLine
   def initialize(&block)
     @options = []
@@ -58,20 +62,85 @@
   end
 
   def text(text)
-    @help.push(text)
+    @help.push("\n" + text)
   end
 
   def option(short, long, argument, description)
-    cmd = CommandLineOption.new(short, long, description)
+    cmd = CommandLineOption.new(short, long, argument, description)
     @options.push(cmd)
     @help.push(cmd)
   end
 
   def parse(args)
-    args = args.clone()
-    print_help()
+    args = args.reverse()
 
-    yield()
+    @stop_parsing = false
+    while not args.empty? and not @stop_parsing
+      current = args.pop
+      
+      if current == "--" then
+        while not args.empty?
+          yield(:rest, args.pop)
+        end
+        
+      elsif current == "-" then
+        yield(:rest, current)
+
+      elsif current[0] == ?- then
+        if current[1] == ?- then
+          long_option = current[2..-1]
+          cmd = @options.find {|item| item.long == long_option }
+          
+          if not cmd then
+            raise CommandLineException, "unrecoginzed option '#{current}'"
+          else
+            if cmd.argument then
+              if args.empty? then
+                raise "Error: Option '#{current}' requires argument of type '#{cmd.argument}'"
+              else
+                yield(cmd.short, args.pop())
+              end
+            else
+              yield(cmd.short, nil)
+            end
+          end
+
+        else
+          # short option
+          short_options = current[1..-1]
+          
+          while not short_options.empty? 
+            short = short_options[0]
+            short_options = short_options[1..-1]
+
+            cmd = @options.find {|item| item.short == short}
+            
+            if not cmd then
+              raise CommandLineException, "unrecoginzed option '#{current}'"
+            else
+              if cmd.argument then
+                if not short_options.empty? then
+                  yield(cmd.short, short_options)
+                  short_options = ""
+                else
+                  if args.empty? then
+                    raise CommandLineException, "Error: Option '#{current}' requires argument of type '#{cmd.argument}'"
+                  else
+                    yield(cmd.short, args.pop())
+                  end    
+                end
+              else
+                yield(cmd.short, nil)
+              end
+            end
+          end
+
+        end
+      else
+        # rest argument
+        yield(:rest, current)
+      end
+    end
   end
 
   def print_help()
@@ -88,6 +157,10 @@
       end
     }
   end
+
+  def exit()
+    @stop_parsing = true
+  end
 end
 
 cmd = CommandLine.new() {
@@ -96,21 +169,38 @@
   description("Editor for editing Windstille map files.")
   
   group("Display")
-  option("f", "fullscreen", nil,            "Launch in fullscreen mode")
-  option("g", "geometry",   "WIDTHxHEIGHT", "Launch in the given resolution")
+  option(?f, "fullscreen", nil,            "Launch in fullscreen mode")
+  option(?g, "geometry",   "WIDTHxHEIGHT", "Launch in the given resolution")
 
-  text("If you have throuble launching, try to cleanup ~/.windstille-editor/config.scm or contact grumbel at gmx.de")
+  group("Misc")
+  option(?h, "help",       nil,            "Print this help")
+
+  text("If you have throuble launching, try to cleanup ~/.windstille-editor/config.scm" \
+       "or contact grumbel at gmx.de")
 }
 
-cmd.parse(ARGV) { |option, argument|
-  case option
-  when "f"
-    
-  when "g"
-    
-  when :rest
-    
+if false then
+  begin
+    cmd.parse(ARGV) { |option, argument|
+      case option
+      when ?f
+        puts("Fullscreen")
+
+      when ?g
+        puts("Geometry: #{argument}")
+        
+      when ?h
+        cmd.print_help()
+        cmd.exit()
+
+      when :rest
+        puts("Rest: #{argument}")
+      end
+    }
+
+  rescue CommandLineException => err
+    puts('windstille-editor:' + err)
   end
-}
+end
 
 # EOF #



From grumbel at berlios.de  Tue Sep 20 11:30:48 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Tue, 20 Sep 2005 11:30:48 +0200
Subject: [Flexlay-commit] r611 - in trunk: ruby windstille
Message-ID: <200509200930.j8K9UmIm001619@sheep.berlios.de>

Author: grumbel
Date: 2005-09-20 11:30:45 +0200 (Tue, 20 Sep 2005)
New Revision: 611

Modified:
   trunk/ruby/command_line.rb
   trunk/ruby/sexpr_config_file.rb
   trunk/windstille/controller.rb
   trunk/windstille/gui.rb
   trunk/windstille/gui_specs.rb
   trunk/windstille/windstille.rb
Log:
- integrated command line parsing into windstille

Modified: trunk/ruby/command_line.rb
===================================================================
--- trunk/ruby/command_line.rb	2005-09-20 09:01:54 UTC (rev 610)
+++ trunk/ruby/command_line.rb	2005-09-20 09:30:45 UTC (rev 611)
@@ -153,7 +153,7 @@
       if item.is_a?(String)
         puts(item)
       elsif item.is_a?(CommandLineOption)
-        puts("   -#{item.short}, --#{item.long}   #{item.description}")
+        puts("  %-20s   %s" %["-#{item.short.chr}, --#{item.long}", item.description])
       end
     }
   end
@@ -163,44 +163,4 @@
   end
 end
 
-cmd = CommandLine.new() {
-  name("Windstille Editor V0.1")
-  usage("windstille-editor [OPTION]... [FILE]...")
-  description("Editor for editing Windstille map files.")
-  
-  group("Display")
-  option(?f, "fullscreen", nil,            "Launch in fullscreen mode")
-  option(?g, "geometry",   "WIDTHxHEIGHT", "Launch in the given resolution")
-
-  group("Misc")
-  option(?h, "help",       nil,            "Print this help")
-
-  text("If you have throuble launching, try to cleanup ~/.windstille-editor/config.scm" \
-       "or contact grumbel at gmx.de")
-}
-
-if false then
-  begin
-    cmd.parse(ARGV) { |option, argument|
-      case option
-      when ?f
-        puts("Fullscreen")
-
-      when ?g
-        puts("Geometry: #{argument}")
-        
-      when ?h
-        cmd.print_help()
-        cmd.exit()
-
-      when :rest
-        puts("Rest: #{argument}")
-      end
-    }
-
-  rescue CommandLineException => err
-    puts('windstille-editor:' + err)
-  end
-end
-
 # EOF #

Modified: trunk/ruby/sexpr_config_file.rb
===================================================================
--- trunk/ruby/sexpr_config_file.rb	2005-09-20 09:01:54 UTC (rev 610)
+++ trunk/ruby/sexpr_config_file.rb	2005-09-20 09:30:45 UTC (rev 611)
@@ -100,7 +100,7 @@
     elsif value.is_a?(Array)
       str = ""
       value.each() {|v| 
-        str += val2sexpr(v)
+        str += value2sexpr(v)
         str += " "
       }
       return str

Modified: trunk/windstille/controller.rb
===================================================================
--- trunk/windstille/controller.rb	2005-09-20 09:01:54 UTC (rev 610)
+++ trunk/windstille/controller.rb	2005-09-20 09:30:45 UTC (rev 611)
@@ -6,7 +6,7 @@
     @tilemap_select_tool = TileMapSelectTool.new()
     @zoom_tool           = ZoomTool.new()
     @objmap_select_tool  = ObjMapSelectTool.new()
-    @recent_files        = []
+    @recent_files        = $config.get("recent-files")
   end
     
   def set_tilemap_paint_tool()
@@ -32,11 +32,22 @@
   def load_level(filename)
     $startlevel = Sector.new(filename)
     $startlevel.activate($workspace)
+    add_recent_file(filename)
   end
 
   def save_level(filename)
     $startlevel.save(filename)
+    add_recent_file(filename)
   end
+
+  def add_recent_file(filename)
+    @recent_files = @recent_files.find_all {|i| i != filename }
+    @recent_files.push(filename)
+    $gui.recent_files_menu.clear()
+    $controller.recent_files.reverse.each{ |filename|
+      $gui.recent_files_menu.add_item(filename, proc { $controller.load_level(filename) })
+    }
+  end
 end
 
 # EOF #

Modified: trunk/windstille/gui.rb
===================================================================
--- trunk/windstille/gui.rb	2005-09-20 09:01:54 UTC (rev 610)
+++ trunk/windstille/gui.rb	2005-09-20 09:30:45 UTC (rev 611)
@@ -27,7 +27,7 @@
 
 ## GUI class which holds all the GUI components and the state of them
 class GUI
-  attr_reader :workspace, :gui, :tileselector, :objectselector, :tilegroup_menu, :layer_menu
+  attr_reader :workspace, :gui, :tileselector, :objectselector, :tilegroup_menu, :layer_menu, :recent_files_menu
 
   def run()
     ## Enter main loop here
@@ -47,6 +47,11 @@
   end
 
   def post_initalize()
+    @recent_files_menu = Menu.new(CL_Point.new(32*2, 54), @gui.get_component())
+    $controller.recent_files.each{ |filename|
+      @recent_files_menu.add_item(filename, proc { $controller.load_level(filename) })
+    }
+
     @editor_map = @components.get('editormap').component
     @workspace  = Workspace.new()
     @editor_map.set_workspace(@workspace)

Modified: trunk/windstille/gui_specs.rb
===================================================================
--- trunk/windstille/gui_specs.rb	2005-09-20 09:01:54 UTC (rev 610)
+++ trunk/windstille/gui_specs.rb	2005-09-20 09:30:45 UTC (rev 611)
@@ -45,7 +45,7 @@
 $buttonpanel_spec = [
   [:icon,       "new",         "../data/images/icons24/stock_new.png",     proc{ $gui.new_level() }],
   [:icon,       "open",        "../data/images/icons24/stock_open.png",    proc{ $gui.level_load() }],
-  [:small_icon, "recent",      "../data/images/icons24/downarrow.png",     proc{ $controller.recent_files_menu.run() }],
+  [:small_icon, "recent",      "../data/images/icons24/downarrow.png",     proc{ $gui.recent_files_menu.run() }],
   [:icon,       "save",        "../data/images/icons24/stock_save.png",    proc{ $gui.level_save() }],
   [:icon,       "saveas",      "../data/images/icons24/stock_save_as.png", proc{ $gui.level_save_as() }],
   [:seperator],

Modified: trunk/windstille/windstille.rb
===================================================================
--- trunk/windstille/windstille.rb	2005-09-20 09:01:54 UTC (rev 610)
+++ trunk/windstille/windstille.rb	2005-09-20 09:30:45 UTC (rev 611)
@@ -29,12 +29,12 @@
 
 require "controller.rb"
 require "sexpr.rb"
+require "command_line.rb"
 require "sexpr_config_file.rb"
 require "gui.rb"
 require "sector.rb"
 require "tileset.rb"
 
-
 $config = SExprConfigFile.new("windstille-editor") {
   register("datadir",       nil)
   register("screen-width",  800)
@@ -43,14 +43,60 @@
   register("recent-files",  [])
 }
 
-$datadir = $config.get("datadir")
+cmd = CommandLine.new() {
+  name("Windstille Editor V0.1")
+  usage("windstille-editor [OPTION]... [FILE]...")
+  description("Editor for editing Windstille map files.")
+  
+  group("Display")
+  option(?f, "fullscreen", nil,            "Launch in fullscreen mode")
+  option(?w, "window",     nil,            "Launch in window mode")
+  option(?g, "geometry",   "WIDTHxHEIGHT", "Launch in the given resolution")
 
+  group("Misc")
+  option(?d, "datadir",    "DIR",          "Set the datadir to use")
+  option(?h, "help",       nil,            "Print this help")
+
+  text("Report bugs to <grumbel at gmx.de>.")
+}
+
+begin
+  cmd.parse(ARGV) { |option, argument|
+    case option
+    when ?w
+      $config.set("fullscreen", false)
+      
+    when ?f
+      $config.set("fullscreen", true)
+      
+    when ?g
+      (width, height) = argument.scan(/([0-9]+)x([0-9]+)/)[0]
+      $config.set("screen-width",  Integer(width))
+      $config.set("screen-height", Integer(height))
+      
+    when ?h
+      cmd.print_help()
+      cmd.exit()
+      exit()
+
+    when :rest
+      $levelfile = argument
+    end
+  }
+
+rescue CommandLineException => err
+  puts('windstille-editor:' + err)
+end
+
+$datadir    = $config.get("datadir")
+$fullscreen = $config.get("fullscreen")
+
 $screen_width  = $config.get("screen-width")
 $screen_height = $config.get("screen-height")
 
 ## Init Flexlay itself
 $flexlay = Flexlay.new()
-$flexlay.init($screen_width, $screen_height, false, true)
+$flexlay.init($screen_width, $screen_height, $fullscreen, true)
 
 $gui = GUI.new()
 
@@ -63,8 +109,11 @@
   
   $gui.post_initalize()
 
-  $startlevel = Sector.new(100, 30)
-  $startlevel.activate($workspace)
+  if not $levelfile then
+    Sector.new(100, 30).activate($workspace)
+  else
+    $controller.load_level($levelfile)
+  end
 
   $gui.workspace.set_tool($controller.tilemap_paint_tool.to_tool());
 end
@@ -86,6 +135,7 @@
 $gui.run()
 
 $config.set("datadir", $datadir)
+$config.set("recent-files", $controller.recent_files)
 $config.write()
 
 # $flexlay.deinit()



From grumbel at berlios.de  Wed Sep 21 17:52:17 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Wed, 21 Sep 2005 17:52:17 +0200
Subject: [Flexlay-commit] r612 - in trunk: ruby windstille
Message-ID: <200509211552.j8LFqH1m017214@sheep.berlios.de>

Author: grumbel
Date: 2005-09-21 17:52:15 +0200 (Wed, 21 Sep 2005)
New Revision: 612

Modified:
   trunk/ruby/command_line.rb
   trunk/windstille/gui.rb
   trunk/windstille/windstille.rb
Log:
- integrated command line parsing into windstille

Modified: trunk/ruby/command_line.rb
===================================================================
--- trunk/ruby/command_line.rb	2005-09-20 09:30:45 UTC (rev 611)
+++ trunk/ruby/command_line.rb	2005-09-21 15:52:15 UTC (rev 612)
@@ -72,6 +72,7 @@
   end
 
   def parse(args)
+    result = []
     args = args.reverse()
 
     @stop_parsing = false
@@ -80,11 +81,11 @@
       
       if current == "--" then
         while not args.empty?
-          yield(:rest, args.pop)
+          result.push([:rest, args.pop])
         end
         
       elsif current == "-" then
-        yield(:rest, current)
+        result.push([:rest, current])
 
       elsif current[0] == ?- then
         if current[1] == ?- then
@@ -98,10 +99,10 @@
               if args.empty? then
                 raise "Error: Option '#{current}' requires argument of type '#{cmd.argument}'"
               else
-                yield(cmd.short, args.pop())
+                result.push([cmd.short, args.pop()])
               end
             else
-              yield(cmd.short, nil)
+              result.push([cmd.short, nil])
             end
           end
 
@@ -120,17 +121,17 @@
             else
               if cmd.argument then
                 if not short_options.empty? then
-                  yield(cmd.short, short_options)
+                  result.push([cmd.short, short_options])
                   short_options = ""
                 else
                   if args.empty? then
                     raise CommandLineException, "Error: Option '#{current}' requires argument of type '#{cmd.argument}'"
                   else
-                    yield(cmd.short, args.pop())
+                    result.push([cmd.short, args.pop()])
                   end    
                 end
               else
-                yield(cmd.short, nil)
+                result.push([cmd.short, nil])
               end
             end
           end
@@ -138,14 +139,16 @@
         end
       else
         # rest argument
-        yield(:rest, current)
+        result.push([:rest, current])
       end
     end
+
+    return result
   end
 
   def print_help()
     puts(@name) if @name
-    puts("Usage: " + @usage) if @usage
+    puts("Usage: #{$0} #{@usage}") if @usage
     puts("")
     puts(@description) if @description
 
@@ -153,7 +156,24 @@
       if item.is_a?(String)
         puts(item)
       elsif item.is_a?(CommandLineOption)
-        puts("  %-20s   %s" %["-#{item.short.chr}, --#{item.long}", item.description])
+        puts("  %-30s %s" % 
+               [("%s%s %s" % [if item.short.is_a?(Fixnum) then
+                            if item.long then
+                              "-#{item.short.chr}, " 
+                            else
+                              "-#{item.short.chr}" 
+                            end
+                          else
+                            ""
+                          end,
+                            if item.long then
+                              "--#{item.long}"
+                            else
+                              ""
+                            end,
+                   if item.argument then item.argument else "" end,
+                 ]),
+               item.description])
       end
     }
   end

Modified: trunk/windstille/gui.rb
===================================================================
--- trunk/windstille/gui.rb	2005-09-20 09:30:45 UTC (rev 611)
+++ trunk/windstille/gui.rb	2005-09-21 15:52:15 UTC (rev 612)
@@ -39,7 +39,7 @@
     
     @components = LayoutComponent.create_from_sexpr(CL_Rect.new(0,0, $screen_width, $screen_height),
                                                     SExpression.new($guilayout_spec),
-                                                   @gui.get_component())
+                                                    @gui.get_component())
     
     connect_v2_graceful($flexlay.sig_resize(), proc{|w, h|
                           @components.set_size(w, h)

Modified: trunk/windstille/windstille.rb
===================================================================
--- trunk/windstille/windstille.rb	2005-09-20 09:30:45 UTC (rev 611)
+++ trunk/windstille/windstille.rb	2005-09-21 15:52:15 UTC (rev 612)
@@ -25,6 +25,7 @@
 require "flexlay_wrap"
 include Flexlay_wrap
 
+require "scanf.rb"
 require "flexlay.rb"
 
 require "controller.rb"
@@ -35,33 +36,32 @@
 require "sector.rb"
 require "tileset.rb"
 
-$config = SExprConfigFile.new("windstille-editor") {
-  register("datadir",       nil)
-  register("screen-width",  800)
-  register("screen-height", 600)
-  register("fullscreen",    false)
-  register("recent-files",  [])
-}
+def parse_command_line()
+  cmd = CommandLine.new() {
+    name("Windstille Editor V0.1")
+    usage("[OPTION]... [FILE]...")
+    description("Editor for editing Windstille map files.")
+    
+    group("Display")
+    option(?f, "fullscreen", nil,            "Launch in fullscreen mode")
+    option(?w, "window",     nil,            "Launch in window mode")
+    option(?g, "geometry",   "WIDTHxHEIGHT", "Launch in the given resolution")
 
-cmd = CommandLine.new() {
-  name("Windstille Editor V0.1")
-  usage("windstille-editor [OPTION]... [FILE]...")
-  description("Editor for editing Windstille map files.")
-  
-  group("Display")
-  option(?f, "fullscreen", nil,            "Launch in fullscreen mode")
-  option(?w, "window",     nil,            "Launch in window mode")
-  option(?g, "geometry",   "WIDTHxHEIGHT", "Launch in the given resolution")
+    group("Misc")
+    option(?d, "datadir",    "DIR",          "Set the datadir to use")
+    option(?h, "help",       nil,            "Print this help")
 
-  group("Misc")
-  option(?d, "datadir",    "DIR",          "Set the datadir to use")
-  option(?h, "help",       nil,            "Print this help")
+    text("Report bugs to <grumbel at gmx.de>.")
+  }
 
-  text("Report bugs to <grumbel at gmx.de>.")
-}
+  begin
+    args = cmd.parse(ARGV)
+  rescue CommandLineException => err
+    puts('windstille-editor:' + err)
+    exit()
+  end
 
-begin
-  cmd.parse(ARGV) { |option, argument|
+  args.each { |option, argument|
     case option
     when ?w
       $config.set("fullscreen", false)
@@ -69,28 +69,38 @@
     when ?f
       $config.set("fullscreen", true)
       
+    when ?d
+      $config.set("datadir", argument)
+
     when ?g
-      (width, height) = argument.scan(/([0-9]+)x([0-9]+)/)[0]
-      $config.set("screen-width",  Integer(width))
-      $config.set("screen-height", Integer(height))
+      (width, height) = argument.scanf("%dx%d")
+      $config.set("screen-width",  width)  if width
+      $config.set("screen-height", height) if height
       
     when ?h
       cmd.print_help()
       cmd.exit()
       exit()
 
-    when :rest
-      $levelfile = argument
+    else
+      raise "Bug: Unhandled option: -#{option} #{argument}"
     end
   }
-
-rescue CommandLineException => err
-  puts('windstille-editor:' + err)
 end
 
-$datadir    = $config.get("datadir")
-$fullscreen = $config.get("fullscreen")
+$config = SExprConfigFile.new("windstille-editor") {
+  register("datadir",       nil)
+  register("screen-width",  800)
+  register("screen-height", 600)
+  register("fullscreen",    false)
+  register("recent-files",  [])
+}
 
+parse_command_line()
+
+$datadir       = $config.get("datadir")
+$fullscreen    = $config.get("fullscreen")
+
 $screen_width  = $config.get("screen-width")
 $screen_height = $config.get("screen-height")
 
@@ -132,6 +142,20 @@
   # datadir is ready, so startup
   init()
 end
+
+begin # Run user code if available
+  home = ENV['HOME']
+  if home then
+    user_rb = home + "/.windstille-editor/user.rb"
+  else 
+    user_rb = "user.rb"
+  end
+
+  if File.exists?(user_rb) then
+      require user_rb
+  end
+end
+
 $gui.run()
 
 $config.set("datadir", $datadir)



From grumbel at berlios.de  Wed Sep 21 17:55:08 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Wed, 21 Sep 2005 17:55:08 +0200
Subject: [Flexlay-commit] r613 - trunk/windstille
Message-ID: <200509211555.j8LFt8YW017411@sheep.berlios.de>

Author: grumbel
Date: 2005-09-21 17:55:07 +0200 (Wed, 21 Sep 2005)
New Revision: 613

Modified:
   trunk/windstille/windstille.rb
Log:
- little bug fix

Modified: trunk/windstille/windstille.rb
===================================================================
--- trunk/windstille/windstille.rb	2005-09-21 15:52:15 UTC (rev 612)
+++ trunk/windstille/windstille.rb	2005-09-21 15:55:07 UTC (rev 613)
@@ -82,6 +82,9 @@
       cmd.exit()
       exit()
 
+    when :rest
+      $levelfile = argument
+
     else
       raise "Bug: Unhandled option: -#{option} #{argument}"
     end



From grumbel at berlios.de  Wed Sep 21 18:20:40 2005
From: grumbel at berlios.de (Ingo Ruhnke at BerliOS)
Date: Wed, 21 Sep 2005 18:20:40 +0200
Subject: [Flexlay-commit] r614 - trunk
Message-ID: <200509211620.j8LGKeFD019383@sheep.berlios.de>

Author: grumbel
Date: 2005-09-21 18:20:25 +0200 (Wed, 21 Sep 2005)
New Revision: 614

Removed:
   trunk/doc/
Log:
- empty directory removed



